[{"name":"infix fun <T : Comparable<T>> Column<T>.matches(condition: Condition<T>?): Op<Boolean>?","description":"io.nikstep.conditionspec.exposed.matches","location":"exposed-adapter/io.nikstep.conditionspec.exposed/matches.html","searchKeys":["matches","infix fun <T : Comparable<T>> Column<T>.matches(condition: Condition<T>?): Op<Boolean>?","io.nikstep.conditionspec.exposed.matches"]},{"name":"infix fun <T : Comparable<T>> Column<T?>.matches(condition: Condition<T>?): Op<Boolean>?","description":"io.nikstep.conditionspec.exposed.matches","location":"exposed-adapter/io.nikstep.conditionspec.exposed/matches.html","searchKeys":["matches","infix fun <T : Comparable<T>> Column<T?>.matches(condition: Condition<T>?): Op<Boolean>?","io.nikstep.conditionspec.exposed.matches"]},{"name":"abstract val value: T","description":"io.nikstep.conditionspec.condition.RangeCondition.value","location":"base/io.nikstep.conditionspec.condition/-range-condition/value.html","searchKeys":["value","abstract val value: T","io.nikstep.conditionspec.condition.RangeCondition.value"]},{"name":"class NotNull<T : Comparable<T>> : NullabilityCondition<T> ","description":"io.nikstep.conditionspec.condition.NotNull","location":"base/io.nikstep.conditionspec.condition/-not-null/index.html","searchKeys":["NotNull","class NotNull<T : Comparable<T>> : NullabilityCondition<T> ","io.nikstep.conditionspec.condition.NotNull"]},{"name":"class Null<T : Comparable<T>> : NullabilityCondition<T> ","description":"io.nikstep.conditionspec.condition.Null","location":"base/io.nikstep.conditionspec.condition/-null/index.html","searchKeys":["Null","class Null<T : Comparable<T>> : NullabilityCondition<T> ","io.nikstep.conditionspec.condition.Null"]},{"name":"constructor()","description":"io.nikstep.conditionspec.condition.NotNull.NotNull","location":"base/io.nikstep.conditionspec.condition/-not-null/-not-null.html","searchKeys":["NotNull","constructor()","io.nikstep.conditionspec.condition.NotNull.NotNull"]},{"name":"constructor()","description":"io.nikstep.conditionspec.condition.Null.Null","location":"base/io.nikstep.conditionspec.condition/-null/-null.html","searchKeys":["Null","constructor()","io.nikstep.conditionspec.condition.Null.Null"]},{"name":"constructor(conditions: List<Condition<T>>)","description":"io.nikstep.conditionspec.condition.And.And","location":"base/io.nikstep.conditionspec.condition/-and/-and.html","searchKeys":["And","constructor(conditions: List<Condition<T>>)","io.nikstep.conditionspec.condition.And.And"]},{"name":"constructor(conditions: List<Condition<T>>)","description":"io.nikstep.conditionspec.condition.Or.Or","location":"base/io.nikstep.conditionspec.condition/-or/-or.html","searchKeys":["Or","constructor(conditions: List<Condition<T>>)","io.nikstep.conditionspec.condition.Or.Or"]},{"name":"constructor(value1: T, value2: T)","description":"io.nikstep.conditionspec.condition.Between.Between","location":"base/io.nikstep.conditionspec.condition/-between/-between.html","searchKeys":["Between","constructor(value1: T, value2: T)","io.nikstep.conditionspec.condition.Between.Between"]},{"name":"constructor(value: String)","description":"io.nikstep.conditionspec.condition.Like.Like","location":"base/io.nikstep.conditionspec.condition/-like/-like.html","searchKeys":["Like","constructor(value: String)","io.nikstep.conditionspec.condition.Like.Like"]},{"name":"constructor(value: String)","description":"io.nikstep.conditionspec.condition.NotLike.NotLike","location":"base/io.nikstep.conditionspec.condition/-not-like/-not-like.html","searchKeys":["NotLike","constructor(value: String)","io.nikstep.conditionspec.condition.NotLike.NotLike"]},{"name":"constructor(value: T)","description":"io.nikstep.conditionspec.condition.Eq.Eq","location":"base/io.nikstep.conditionspec.condition/-eq/-eq.html","searchKeys":["Eq","constructor(value: T)","io.nikstep.conditionspec.condition.Eq.Eq"]},{"name":"constructor(value: T)","description":"io.nikstep.conditionspec.condition.Greater.Greater","location":"base/io.nikstep.conditionspec.condition/-greater/-greater.html","searchKeys":["Greater","constructor(value: T)","io.nikstep.conditionspec.condition.Greater.Greater"]},{"name":"constructor(value: T)","description":"io.nikstep.conditionspec.condition.GreaterEq.GreaterEq","location":"base/io.nikstep.conditionspec.condition/-greater-eq/-greater-eq.html","searchKeys":["GreaterEq","constructor(value: T)","io.nikstep.conditionspec.condition.GreaterEq.GreaterEq"]},{"name":"constructor(value: T)","description":"io.nikstep.conditionspec.condition.Less.Less","location":"base/io.nikstep.conditionspec.condition/-less/-less.html","searchKeys":["Less","constructor(value: T)","io.nikstep.conditionspec.condition.Less.Less"]},{"name":"constructor(value: T)","description":"io.nikstep.conditionspec.condition.LessEq.LessEq","location":"base/io.nikstep.conditionspec.condition/-less-eq/-less-eq.html","searchKeys":["LessEq","constructor(value: T)","io.nikstep.conditionspec.condition.LessEq.LessEq"]},{"name":"constructor(value: T)","description":"io.nikstep.conditionspec.condition.NotEq.NotEq","location":"base/io.nikstep.conditionspec.condition/-not-eq/-not-eq.html","searchKeys":["NotEq","constructor(value: T)","io.nikstep.conditionspec.condition.NotEq.NotEq"]},{"name":"constructor(values: List<T>)","description":"io.nikstep.conditionspec.condition.In.In","location":"base/io.nikstep.conditionspec.condition/-in/-in.html","searchKeys":["In","constructor(values: List<T>)","io.nikstep.conditionspec.condition.In.In"]},{"name":"constructor(values: List<T>)","description":"io.nikstep.conditionspec.condition.NotIn.NotIn","location":"base/io.nikstep.conditionspec.condition/-not-in/-not-in.html","searchKeys":["NotIn","constructor(values: List<T>)","io.nikstep.conditionspec.condition.NotIn.NotIn"]},{"name":"constructor(vararg conditions: Condition<T>)","description":"io.nikstep.conditionspec.condition.And.And","location":"base/io.nikstep.conditionspec.condition/-and/-and.html","searchKeys":["And","constructor(vararg conditions: Condition<T>)","io.nikstep.conditionspec.condition.And.And"]},{"name":"constructor(vararg conditions: Condition<T>)","description":"io.nikstep.conditionspec.condition.Or.Or","location":"base/io.nikstep.conditionspec.condition/-or/-or.html","searchKeys":["Or","constructor(vararg conditions: Condition<T>)","io.nikstep.conditionspec.condition.Or.Or"]},{"name":"constructor(vararg values: T)","description":"io.nikstep.conditionspec.condition.Between.Between","location":"base/io.nikstep.conditionspec.condition/-between/-between.html","searchKeys":["Between","constructor(vararg values: T)","io.nikstep.conditionspec.condition.Between.Between"]},{"name":"constructor(vararg values: T)","description":"io.nikstep.conditionspec.condition.In.In","location":"base/io.nikstep.conditionspec.condition/-in/-in.html","searchKeys":["In","constructor(vararg values: T)","io.nikstep.conditionspec.condition.In.In"]},{"name":"constructor(vararg values: T)","description":"io.nikstep.conditionspec.condition.NotIn.NotIn","location":"base/io.nikstep.conditionspec.condition/-not-in/-not-in.html","searchKeys":["NotIn","constructor(vararg values: T)","io.nikstep.conditionspec.condition.NotIn.NotIn"]},{"name":"data class Between<T : Comparable<T>>(val value1: T, val value2: T) : MultiCondition<T> ","description":"io.nikstep.conditionspec.condition.Between","location":"base/io.nikstep.conditionspec.condition/-between/index.html","searchKeys":["Between","data class Between<T : Comparable<T>>(val value1: T, val value2: T) : MultiCondition<T> ","io.nikstep.conditionspec.condition.Between"]},{"name":"infix fun <T : Comparable<T>> Condition<T>.and(condition: Condition<T>): And<T>","description":"io.nikstep.conditionspec.condition.and","location":"base/io.nikstep.conditionspec.condition/and.html","searchKeys":["and","infix fun <T : Comparable<T>> Condition<T>.and(condition: Condition<T>): And<T>","io.nikstep.conditionspec.condition.and"]},{"name":"infix fun <T : Comparable<T>> Condition<T>.or(condition: Condition<T>): Or<T>","description":"io.nikstep.conditionspec.condition.or","location":"base/io.nikstep.conditionspec.condition/or.html","searchKeys":["or","infix fun <T : Comparable<T>> Condition<T>.or(condition: Condition<T>): Or<T>","io.nikstep.conditionspec.condition.or"]},{"name":"open override val value: T","description":"io.nikstep.conditionspec.condition.Greater.value","location":"base/io.nikstep.conditionspec.condition/-greater/value.html","searchKeys":["value","open override val value: T","io.nikstep.conditionspec.condition.Greater.value"]},{"name":"open override val value: T","description":"io.nikstep.conditionspec.condition.GreaterEq.value","location":"base/io.nikstep.conditionspec.condition/-greater-eq/value.html","searchKeys":["value","open override val value: T","io.nikstep.conditionspec.condition.GreaterEq.value"]},{"name":"open override val value: T","description":"io.nikstep.conditionspec.condition.Less.value","location":"base/io.nikstep.conditionspec.condition/-less/value.html","searchKeys":["value","open override val value: T","io.nikstep.conditionspec.condition.Less.value"]},{"name":"open override val value: T","description":"io.nikstep.conditionspec.condition.LessEq.value","location":"base/io.nikstep.conditionspec.condition/-less-eq/value.html","searchKeys":["value","open override val value: T","io.nikstep.conditionspec.condition.LessEq.value"]},{"name":"sealed interface CompositeCondition<T : Comparable<T>> : Condition<T> ","description":"io.nikstep.conditionspec.condition.CompositeCondition","location":"base/io.nikstep.conditionspec.condition/-composite-condition/index.html","searchKeys":["CompositeCondition","sealed interface CompositeCondition<T : Comparable<T>> : Condition<T> ","io.nikstep.conditionspec.condition.CompositeCondition"]},{"name":"sealed interface Condition<T : Comparable<T>>","description":"io.nikstep.conditionspec.condition.Condition","location":"base/io.nikstep.conditionspec.condition/-condition/index.html","searchKeys":["Condition","sealed interface Condition<T : Comparable<T>>","io.nikstep.conditionspec.condition.Condition"]},{"name":"sealed interface ExclusiveCondition<T : Comparable<T>> : Condition<T> ","description":"io.nikstep.conditionspec.condition.ExclusiveCondition","location":"base/io.nikstep.conditionspec.condition/-exclusive-condition/index.html","searchKeys":["ExclusiveCondition","sealed interface ExclusiveCondition<T : Comparable<T>> : Condition<T> ","io.nikstep.conditionspec.condition.ExclusiveCondition"]},{"name":"sealed interface InclusiveCondition<T : Comparable<T>> : Condition<T> ","description":"io.nikstep.conditionspec.condition.InclusiveCondition","location":"base/io.nikstep.conditionspec.condition/-inclusive-condition/index.html","searchKeys":["InclusiveCondition","sealed interface InclusiveCondition<T : Comparable<T>> : Condition<T> ","io.nikstep.conditionspec.condition.InclusiveCondition"]},{"name":"sealed interface LikeCondition : Condition<String> ","description":"io.nikstep.conditionspec.condition.LikeCondition","location":"base/io.nikstep.conditionspec.condition/-like-condition/index.html","searchKeys":["LikeCondition","sealed interface LikeCondition : Condition<String> ","io.nikstep.conditionspec.condition.LikeCondition"]},{"name":"sealed interface MultiCondition<T : Comparable<T>> : InclusiveCondition<T> ","description":"io.nikstep.conditionspec.condition.MultiCondition","location":"base/io.nikstep.conditionspec.condition/-multi-condition/index.html","searchKeys":["MultiCondition","sealed interface MultiCondition<T : Comparable<T>> : InclusiveCondition<T> ","io.nikstep.conditionspec.condition.MultiCondition"]},{"name":"sealed interface NullabilityCondition<T : Comparable<T>> : Condition<T> ","description":"io.nikstep.conditionspec.condition.NullabilityCondition","location":"base/io.nikstep.conditionspec.condition/-nullability-condition/index.html","searchKeys":["NullabilityCondition","sealed interface NullabilityCondition<T : Comparable<T>> : Condition<T> ","io.nikstep.conditionspec.condition.NullabilityCondition"]},{"name":"sealed interface RangeCondition<T : Comparable<T>> : Condition<T> ","description":"io.nikstep.conditionspec.condition.RangeCondition","location":"base/io.nikstep.conditionspec.condition/-range-condition/index.html","searchKeys":["RangeCondition","sealed interface RangeCondition<T : Comparable<T>> : Condition<T> ","io.nikstep.conditionspec.condition.RangeCondition"]},{"name":"sealed interface SingleCondition<T : Comparable<T>> : InclusiveCondition<T> ","description":"io.nikstep.conditionspec.condition.SingleCondition","location":"base/io.nikstep.conditionspec.condition/-single-condition/index.html","searchKeys":["SingleCondition","sealed interface SingleCondition<T : Comparable<T>> : InclusiveCondition<T> ","io.nikstep.conditionspec.condition.SingleCondition"]},{"name":"val conditions: List<Condition<T>>","description":"io.nikstep.conditionspec.condition.And.conditions","location":"base/io.nikstep.conditionspec.condition/-and/conditions.html","searchKeys":["conditions","val conditions: List<Condition<T>>","io.nikstep.conditionspec.condition.And.conditions"]},{"name":"val conditions: List<Condition<T>>","description":"io.nikstep.conditionspec.condition.Or.conditions","location":"base/io.nikstep.conditionspec.condition/-or/conditions.html","searchKeys":["conditions","val conditions: List<Condition<T>>","io.nikstep.conditionspec.condition.Or.conditions"]},{"name":"val value1: T","description":"io.nikstep.conditionspec.condition.Between.value1","location":"base/io.nikstep.conditionspec.condition/-between/value1.html","searchKeys":["value1","val value1: T","io.nikstep.conditionspec.condition.Between.value1"]},{"name":"val value2: T","description":"io.nikstep.conditionspec.condition.Between.value2","location":"base/io.nikstep.conditionspec.condition/-between/value2.html","searchKeys":["value2","val value2: T","io.nikstep.conditionspec.condition.Between.value2"]},{"name":"val value: String","description":"io.nikstep.conditionspec.condition.Like.value","location":"base/io.nikstep.conditionspec.condition/-like/value.html","searchKeys":["value","val value: String","io.nikstep.conditionspec.condition.Like.value"]},{"name":"val value: String","description":"io.nikstep.conditionspec.condition.NotLike.value","location":"base/io.nikstep.conditionspec.condition/-not-like/value.html","searchKeys":["value","val value: String","io.nikstep.conditionspec.condition.NotLike.value"]},{"name":"val value: T","description":"io.nikstep.conditionspec.condition.Eq.value","location":"base/io.nikstep.conditionspec.condition/-eq/value.html","searchKeys":["value","val value: T","io.nikstep.conditionspec.condition.Eq.value"]},{"name":"val value: T","description":"io.nikstep.conditionspec.condition.NotEq.value","location":"base/io.nikstep.conditionspec.condition/-not-eq/value.html","searchKeys":["value","val value: T","io.nikstep.conditionspec.condition.NotEq.value"]},{"name":"val values: List<T>","description":"io.nikstep.conditionspec.condition.In.values","location":"base/io.nikstep.conditionspec.condition/-in/values.html","searchKeys":["values","val values: List<T>","io.nikstep.conditionspec.condition.In.values"]},{"name":"val values: List<T>","description":"io.nikstep.conditionspec.condition.NotIn.values","location":"base/io.nikstep.conditionspec.condition/-not-in/values.html","searchKeys":["values","val values: List<T>","io.nikstep.conditionspec.condition.NotIn.values"]},{"name":"value class And<T : Comparable<T>>(val conditions: List<Condition<T>>) : CompositeCondition<T> ","description":"io.nikstep.conditionspec.condition.And","location":"base/io.nikstep.conditionspec.condition/-and/index.html","searchKeys":["And","value class And<T : Comparable<T>>(val conditions: List<Condition<T>>) : CompositeCondition<T> ","io.nikstep.conditionspec.condition.And"]},{"name":"value class Eq<T : Comparable<T>>(val value: T) : SingleCondition<T> ","description":"io.nikstep.conditionspec.condition.Eq","location":"base/io.nikstep.conditionspec.condition/-eq/index.html","searchKeys":["Eq","value class Eq<T : Comparable<T>>(val value: T) : SingleCondition<T> ","io.nikstep.conditionspec.condition.Eq"]},{"name":"value class Greater<T : Comparable<T>>(val value: T) : RangeCondition<T> ","description":"io.nikstep.conditionspec.condition.Greater","location":"base/io.nikstep.conditionspec.condition/-greater/index.html","searchKeys":["Greater","value class Greater<T : Comparable<T>>(val value: T) : RangeCondition<T> ","io.nikstep.conditionspec.condition.Greater"]},{"name":"value class GreaterEq<T : Comparable<T>>(val value: T) : RangeCondition<T> ","description":"io.nikstep.conditionspec.condition.GreaterEq","location":"base/io.nikstep.conditionspec.condition/-greater-eq/index.html","searchKeys":["GreaterEq","value class GreaterEq<T : Comparable<T>>(val value: T) : RangeCondition<T> ","io.nikstep.conditionspec.condition.GreaterEq"]},{"name":"value class In<T : Comparable<T>>(val values: List<T>) : MultiCondition<T> ","description":"io.nikstep.conditionspec.condition.In","location":"base/io.nikstep.conditionspec.condition/-in/index.html","searchKeys":["In","value class In<T : Comparable<T>>(val values: List<T>) : MultiCondition<T> ","io.nikstep.conditionspec.condition.In"]},{"name":"value class Less<T : Comparable<T>>(val value: T) : RangeCondition<T> ","description":"io.nikstep.conditionspec.condition.Less","location":"base/io.nikstep.conditionspec.condition/-less/index.html","searchKeys":["Less","value class Less<T : Comparable<T>>(val value: T) : RangeCondition<T> ","io.nikstep.conditionspec.condition.Less"]},{"name":"value class LessEq<T : Comparable<T>>(val value: T) : RangeCondition<T> ","description":"io.nikstep.conditionspec.condition.LessEq","location":"base/io.nikstep.conditionspec.condition/-less-eq/index.html","searchKeys":["LessEq","value class LessEq<T : Comparable<T>>(val value: T) : RangeCondition<T> ","io.nikstep.conditionspec.condition.LessEq"]},{"name":"value class Like(val value: String) : LikeCondition","description":"io.nikstep.conditionspec.condition.Like","location":"base/io.nikstep.conditionspec.condition/-like/index.html","searchKeys":["Like","value class Like(val value: String) : LikeCondition","io.nikstep.conditionspec.condition.Like"]},{"name":"value class NotEq<T : Comparable<T>>(val value: T) : ExclusiveCondition<T> ","description":"io.nikstep.conditionspec.condition.NotEq","location":"base/io.nikstep.conditionspec.condition/-not-eq/index.html","searchKeys":["NotEq","value class NotEq<T : Comparable<T>>(val value: T) : ExclusiveCondition<T> ","io.nikstep.conditionspec.condition.NotEq"]},{"name":"value class NotIn<T : Comparable<T>>(val values: List<T>) : ExclusiveCondition<T> ","description":"io.nikstep.conditionspec.condition.NotIn","location":"base/io.nikstep.conditionspec.condition/-not-in/index.html","searchKeys":["NotIn","value class NotIn<T : Comparable<T>>(val values: List<T>) : ExclusiveCondition<T> ","io.nikstep.conditionspec.condition.NotIn"]},{"name":"value class NotLike(val value: String) : LikeCondition","description":"io.nikstep.conditionspec.condition.NotLike","location":"base/io.nikstep.conditionspec.condition/-not-like/index.html","searchKeys":["NotLike","value class NotLike(val value: String) : LikeCondition","io.nikstep.conditionspec.condition.NotLike"]},{"name":"value class Or<T : Comparable<T>>(val conditions: List<Condition<T>>) : CompositeCondition<T> ","description":"io.nikstep.conditionspec.condition.Or","location":"base/io.nikstep.conditionspec.condition/-or/index.html","searchKeys":["Or","value class Or<T : Comparable<T>>(val conditions: List<Condition<T>>) : CompositeCondition<T> ","io.nikstep.conditionspec.condition.Or"]}]